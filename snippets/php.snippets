snippet #!
	#!/usr/bin/env php
	${1}
snippet <?
	<?php
	/**
	 * @file        ${1}
	 *
	 * @date        `strftime("%Y-%m-%d")`
	 *
	 * @package		${5:default}
	 * @author      `g:snips_author`
	 */
	${2}
snippet req
	require('${1:file}');${2}
snippet req1
	require_once('${1:file}');${2}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet $_ Get['...']
	$_GET['${1:variable}']${2}
snippet $_ POST['...']
	$_POST['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
snippet /**
	/**
	 * ${1}
	 */
	 ${2}
snippet class
	/**
	 * ${3:undocumented class}
	 * @packaged ${4:default}
	 */
	${1}class ${2}
	{
		${6}
	}${7}
snippet func
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}${5}
snippet interface
	/**
	 * ${2:undocumented class}
	 * @package ${3:default}
	 */
	interface ${1:}
	{
		${5}
	}${6}
snippet while
	while (${1:/* condition */}) {
		${2:// code...}
	}
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}${3}
snippet else
	else {
		${1:// code...}
	}${2}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}${3}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet prop
	/**
	 * @var ${3:string} $1
	 * ${4:@ORM\Column(type="string")}
	 */
	private $${1:name};

	public function set${2:Name}($$1)
	{
		$this->$1 = $$1;
	}

	public function get$2()
	{
		return $this->$1;
	}
	${5}
snippet array
	array(${2})${1}
